# ## (c) 2004-2024  Cybionet - Securite et Integration Systeme

# ########################################################################################################
# ## NOTE

# ## Adjust the variables in this configuration file to match your needs.

# ## Make sure the headers modules is loaded in Apache.
# ##   - headers_module [a2enmod headers] 
# ##   - ssl_module     [a2enmod ssl_module] 
# ##
# ## Optionnal
# ##   - rewrite_module       [a2enmod rewrite]
# ##   - socache_shmcb_module [a2enmod socache_shmcb]
# ##   - modsecurity-crs      [apt-get install modsecurity-crs]

# ## To check the loaded Apache modules.
# ## apachectl -M


# ########################################################################################################
# ## VARIABLES

# ## Zabbix frontend hostname.
define server zabbix
define serveralt zbx

# ## Zabbix frontend domain name.
define domain example.com

# ## Email address of the person responsible for the Zabbix frontend.
define mail noc@example.com


# ########################################################################################################
# ## HTTP/S

<VirtualHost *:443>
  ServerName "${server}.${domain}"
  ServerAlias "${serveralt}.${domain}"

  ServerAdmin "${mail}"
  DocumentRoot /usr/share/zabbix


# ## PROTOCOLS
  # ## Enable HTTP/2, if available.
  Protocols h2 http/1.1


# ## SSL (Support LetsEncrypt auto-renew with Certbot).
  SSLEngine on
  SSLCertificateFile "/etc/ssl/${domain}/fullchain.pem"
  SSLCertificateKeyFile "/etc/ssl/${domain}/privkey.pem"
  #SSLCertificateChainFile "/etc/ssl/${domain}/intermediate.crt"

  SSLCipherSuite HIGH:!aNULL:!MD5
  #SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  SSLProtocol All -SSLv3 -SSLv2 -TLSv1 -TLSv1.1 -TLSv1.2
  SSLHonorCipherOrder off
  SSLSessionTickets off

  # ## NOTE: 'socache_shmcb_module' is required for these parameters [a2enmod socache_shmcb].
  #SSLUseStapling On
  #SSLStaplingCache "shmcb:logs/ssl_stapling(32768)"


# ## SECURITY
  # ## NOTE: 'headers_module' is required for all this section [a2enmod headers].

  # ## HTTP Strict Transport Security (HSTS)(mod_headers is required) (31536000 seconds == 1 year).
  Header set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

  # ## Content Security Policy (CSP) - Do not put ' ' for URLs.
  Header set Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' https://${server}.${domain}; style-src 'self' 'unsafe-inline'; connect-src 'self' 'unsafe-inline' https://${server}.${domain}; frame-ancestors 'self'"

  # ## X-XSS-Protection
  # ## 1. X-XSS-Protection: 0 : This will disables the filter entirely.
  # ## 2. X-XSS-Protection: 1 : This will enables the filter but only sanitizes potentially malicious scripts.
  # ## 3. X-XSS-Protection: 1; mode=block : This will enables the filter and completely blocks the page.
  Header set X-XSS-Protection "1; mode=block"

  # ## X-Frame-Options
  # ## 1. DENY : This will disables iframe features completely.
  # ## 2. SAMEORIGIN : iframe can be used only by someone on the same origin.
  # ## 3. ALLOW-FROM : This will allows pages to be put in iframes only from specific URLs.
  Header set X-Frame-Options "SAMEORIGIN"

  # ## X-Content-Type-Options
  Header set X-Content-Type-Options "nosniff"

  # ## Referrer-Policy
  Header set Referrer-Policy "strict-origin"

  # ## Permissions-Policy (Feature-Policy)
  Header set Permissions-Policy "camera=(), fullscreen=(self), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), midi=(), payment=(), sync-xhr=(self \"https://${server}.${domain}\")"

  # ## Access-Control-Allow-Origin
  Header set Access-Control-Allow-Origin "${domain}"

  # ## X-XSS-Protection - SameSite cookies
  #Header set Set-Cookie HttpOnly;Secure;SameSite=Strict

  # ## Mod Security CRS (This configuration requires modsecurity-crs [apt-get install modsecurity-crs]).
  #SecRuleEngine On

  #<Location />
  #    SecRule REQUEST_URI attack "id:'1',phase:1,log,deny,status:403"
  #    SecRule RESPONSE_STATUS "@eq 500" "phase:4,deny,status:403,id:1111"
  #</Location>


# ## LOGGING
  # ## Available loglevels: trace8, ..., trace1, debug, info, notice, warn, error, crit, alert, emerg.
  # ## It is also possible to configure the loglevel for particular modules, e.g.
  #LogLevel info ssl:warn

  ErrorLog ${APACHE_LOG_DIR}/ssl-${server}-${domain}_error.log
  CustomLog ${APACHE_LOG_DIR}/ssl-${server}-${domain}_access.log combined


# ## CUSTOM ERROR PAGE
  #ErrorDocument 401 /error/401.html
  #ErrorDocument 403 /error/403.html
  #ErrorDocument 404 /error/404.html
  #ErrorDocument 500 /error/500.html
  #ErrorDocument 502 /error/502.html

</VirtualHost>


# ########################################################################################################
# ## HTTP (Seriously, only use HTTP/S, the days of HTTP are over)

#<VirtualHost *:80>
#  ServerName  "${server}.${domain}"
#  ServerAlias "${serveralt}.${domain}"
#
#  ServerAdmin "${mail}"
#  DocumentRoot /usr/share/zabbix
#
#
## ## REDIRECTION
#  # ## This configuration requires mod_ssl, mod_rewrite, and mod_headers [a2enmod ssl_module] [a2enmod rewrite].
#  # ## To visualize the loaded modules [apachectl -M].
#  RewriteEngine On
#  RewriteCond %{REQUEST_URI} !^/\.well\-known/acme\-challenge/
#  RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
#  #RewriteRule ^(.*)$ https://"${server}.${domain}"$1 [R=301,L]
#
#  RewriteCond %{HTTP:VIA} !^$ [OR]
#  RewriteCond %{HTTP:FORWARDED} !^$ [OR]
#  RewriteCond %{HTTP:USERAGENT_VIA} !^$ [OR]
#  RewriteCond %{HTTP:X_FORWARDED_FOR} !^$ [OR]
#  RewriteCond %{HTTP:PROXY_CONNECTION} !^$ [OR]
#  RewriteCond %{HTTP:XPROXY_CONNECTION} !^$ [OR]
#  RewriteCond %{HTTP:HTTP_PC_REMOTE_ADDR} !^$ [OR]
#  RewriteCond %{HTTP:HTTP_CLIENT_IP} !^$
#  RewriteRule ^(.*)$ - [F]
#
#
## ## SECURITY
#  # ## NOTE: mod_headers is required for all this section [a2enmod headers].
#  # ## To check headers for the zabbix frontend [wget -S --spider https://zabbix.example.com].
#
#  # ## Content Security Policy (CSP) - Ne pas mettre de ' ' pour les URL.
#  Header set Content-Security-Policy "script-src 'self' https://*."${domain}"; style-src 'self' https://*."${domain}"; script-src-elem 'self' https://*."${domain}"; connect-src 'self' https://*."${domain}""
#
#  # ## X-XSS-Protection
#  # ## 1. X-XSS-Protection: 0 : This will disables the filter entirely.
#  # ## 2. X-XSS-Protection: 1 : This will enables the filter but only sanitizes potentially malicious scripts.
#  # ## 3. X-XSS-Protection: 1; mode=block : This will enables the filter and completely blocks the page.
#  Header set X-XSS-Protection "1; mode=block"
#
#  # ## X-Frame-Options
#  # ## 1. DENY : This will disables iframe features completely.
#  # ## 2. SAMEORIGIN : iframe can be used only by someone on the same origin.
#  # ## 3. ALLOW-FROM : This will allows pages to be put in iframes only from specific URLs.
#  Header set X-Frame-Options "SAMEORIGIN"
#
#  # ## Permissions-Policy (Feature-Policy)
#  Header set Permissions-Policy "camera=(), fullscreen=(self), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), midi=(), payment=(), sync-xhr=(self \"http://"${server}"."${domain}"\")"
#
#  # ## Access-Control-Allow-Origin
#  Header set Access-Control-Allow-Origin "${domain}""
#
#  # ## X-XSS-Protection - SameSite cookies
#  Header set Set-Cookie HttpOnly;Secure;SameSite=Strict
#
#  # ## Mod Security CRS (This configuration requires modsecurity-crs [apt-get install modsecurity-crs]).
#  #SecRuleEngine On
#
#  #<Location />
#  #    SecRule REQUEST_URI attack "id:'1',phase:1,log,deny,status:403"
#  #    SecRule RESPONSE_STATUS "@eq 500" "phase:4,deny,status:403,id:1111"
#  #    #SecRule RESPONSE_STATUS "403" "phase:4,deny,status:404,id:1111"
#  #</Location>
#
#
## ## LOGGING
#  # ## NOTE: mod_socache_shmcb is required for these parameters.
#  #SSLUseStapling On
#  #SSLStaplingCache "shmcb:logs/ssl_stapling(32768)"
#
#  ErrorLog ${APACHE_LOG_DIR}/"${server}"-"${domain}"_error.log
#  CustomLog ${APACHE_LOG_DIR}/"${server}"-"${domain}"_access.log combined
#
#
## ## CUSTOM ERROR PAGE
#  ErrorDocument 401 /error/401.html
#  ErrorDocument 403 /error/403.html
#  ErrorDocument 404 /error/404.html
#  ErrorDocument 500 /error/500.html
#  ErrorDocument 502 /error/502.html
#</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
